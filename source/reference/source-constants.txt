.. _style-guide-source-constants:

================
Source Constants
================

``source_constants`` is an extension of the MongoDB Documentation Project
that allows you to define constant variables for use in text. The variables
are replaced before docutils parses the page for rendering. 

Procedure
---------
.. procedure::
   :style: normal

   .. step::
    If the repository uses snooty, define source constants in ``snooty.toml`` in the form
    ``variable-name = "value"``.

    .. code-block:: none

       [constants]
       package-branch = "testing"
       package-version = "4.4.0"
       package-name-org = "mongodb-org"

    If the repository doesn't use snooty, make the following changes in ``conf.py``.

    .. procedure::
      .. step::
        Add ``'source_constants'`` to the ``extensions`` list.

        .. code-block:: python

          extensions = [
            'directives',
            'mongodb',
            'source_constants',
          ]

      .. step::
        Define source constants in the ``source_constants`` dict. Use the form 
        ``'variable-name': 'variable-value'``.

        .. code-block:: python

          source_constants = {
            'package-branch': 'testing',
            'package-version': '4.4'
            'package-name-org': 'mongodb-org',
          }

Use Source Constants
--------------------

To refer to a source constant in restructuredText, use the following syntax:

.. code-block:: none

  |code-example|

.. code-block:: rst

  You are working on version \{+package-version+\} of the package \{+package-name-org+\}.
  Currently on branch \{+package-branch+\}.

Code example test: |code-example|
Second test: |test-variable|
Third: |code-example|

Rendered View
~~~~~~~~~~~~~
You are working on version {+version+} of the package {+package-name-org+}.
Currently on branch {+package-branch+}.

Substitutions
-------------

The `substitutions
<http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#substitution-definitions>`__
built into restructuredText have a number of limitations and quirks.
For example, they cannot be used to substitute content inside of code
blocks, and cannot contain links.

RestructuredText supports text replacements from variables. These are called
_substitutions_. Substitutions can be declared at any point in a
document.

.. Sphinx further supports placing multiple Substitutions in the
.. :sphinx:`rst_epilog </usage/configuration.html#confval-rst_epilog>` of
.. the configuration file. This Sphinx variable array renders as a string
.. of |rst| with all Substitutions at the end of every page.

.. .. caution::

..    If you don't include a single blank line at the end of your RestructuredText
..    file, the Substitution `rst_epilog` generates one build error for
..    every Substitution defined in that file.

Use Substitutions with the following guidelines:

.. - Do not include Substitutions in
..   :doc:`Headings </style-guide/markup/format/headings>`. The text that
..   replaces the Substitution may be longer than the underline and
..   result in a build error.

.. - Add your Substitution to the
..   :sphinx:`rst_epilog </usage/configuration.html#confval-rst_epilog>`
..   array in the `conf.py` file if you plan to use it in more than one
..   page. The most common error when adding to the `rst_epilog` is
..   forgetting to end the line with a comma (``,``).

- Do not include a Substitution within inline formatting or links. It
  doesn't render and generates a build error.

  .. list-table::
     :header-rows: 1
     :widths: 50 50

     * - Use
       - Avoid

     * -

         .. code-block:: rst

            :guilabel:`Using restructuredText`

       -

         .. code-block:: rst
            :copyable: false

            :guilabel:`Using |rst|`


Comparison of Variable Syntaxes
---------------------------------------

.. list-table::
   :header-rows: 1
   :stub-columns: 1

   * -
     - ``{+version+}``
     - ``{{version}}``
     - ``|version|``

   * - Description
     - ``source_constants``
     - Giza YAML substitutions
     - `restructuredText substitutions <http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#substitution-definitions>`__

   * - Locations
     - Can be used anywhere
     - Can only be used within YAML files
     - May only be used in a subset of restructuredText syntactical locations

   * - Valid Content
     - Anything
     - Anything
     - May not be used to inject links or other non-trivial types of
       content

   * - Mutable
     - Can currently only be defined in ``conf.py``
     - Yes. Can be overridden with Giza's content inheritance mechanism
     - Can only be defined once per page context

   * - Warns if undefined
     - Yes
     - No
     - Yes
