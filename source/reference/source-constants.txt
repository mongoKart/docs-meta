.. _style-guide-source-constants:

================
Source Constants
================

``source_constants`` is an extension of the MongoDB Documentation Project
that allows you to define constant variables for use in text. The variables
are replaced before docutils parses the page for rendering. 

Procedure
---------
There are two ways to define source constants.

.. procedure::
   :style: normal

   .. step::
    If the repository uses snooty, define source constants in ``snooty.toml`` under the
    ``[constants]`` heading. Use the form ``variable-name = "value"``.

    .. code-block:: none

       [constants]
       package-branch = "testing"
       package-version = "4.4.0"
       package-name-org = "mongodb-org"

   .. step::
    If the repository does **not** use snooty, make the following changes in ``conf.py``.

    .. procedure::
      .. step::
        Add ``'source_constants'`` to the ``extensions`` list.

        .. code-block:: python

          extensions = [
            'directives',
            'mongodb',
            'source_constants',
          ]

      .. step::
        Define source constants in the ``source_constants`` dict. Use the form 
        ``'variable-name': 'variable-value'``.

        .. code-block:: python

          source_constants = {
            'package-branch': 'testing',
            'package-version': '4.4'
            'package-name-org': 'mongodb-org',
          }

After you've defined a source constant, use it in text with the syntax 
``{+constant-test+}``.

..     .. Attempt 2: {+variable-name+} - BLANK
..     Attempt 5: **{+variable-name+}** - BLANK
..     Attempt 7: ``|code-example|`` - |code-example|
..     Attempt 4: |code-example| - sub value, plaintext
..        Attempt 3: **{+constant-test+}** - constant value, bold

Example
-------

  You are working on version \{+package-version+\} of the package \{+package-name-org+\}.
  Currently on branch \{+package-branch+\}.

Rendered View
~~~~~~~~~~~~~
You are working on version {+package-version+} of the package {+package-name-org+}.
Currently on branch {+package-branch+}.

=============
Substitutions
=============

Before creating source constants, we used the `substitutions
<http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#substitution-definitions>`__
built into restructuredText. Substitutions are similar to source constants but have more
restrictions. Substitution variables are replaced while docutils is parsing the 
page for rendering. 


Procedure
---------
There are two ways to define substitutions.

.. procedure::
  :style: normal

  .. step::
    If the repository uses snooty, define substitutions in ``snooty.toml`` under the
    ``[substitutions]`` heading. Use the form ``variable-name = "value"``.

    .. code-block:: none

       [substitutions]
       package-branch = "testing"
       package-version = "4.4.0"
       package-name-org = "mongodb-org"
  
  .. step::
    If the repository does **not** use snooty, define substitutions in the ``rst_epilog``
    variable in ``conf.py``. Use the form ``'.. |variable-name| replace:: value'``.

    .. code-block:: python

      rst_epilog = '\n'.join([
        '.. |package-branch| replace:: testing',
        '.. |package-version| replace:: 4.4.0',
        '.. |package-name-org| replace:: mongodb-org',
      ])

    .. caution::

      If you don't include a single blank line at the end of your RestructuredText
      file, `rst_epilog` generates one build error for
      every substitution defined in that file.

After you've defined a substitution, use it in text with the syntax 
``|variable-name|``.

Example
-------

.. code-block:: rst

  You are working on version |package-version| of the package |package-name-org|.
  Currently on branch |package-branch|.

Rendered View
~~~~~~~~~~~~~
You are working on version |package-version| of the package |package-name-org|.
Currently on branch |package-branch|.

Guidelines
----------

- Do not include a substitution within inline formatting or links. It
  doesn't render and generates a build error.
- Substitutions will not substitute content inside of code blocks.
- Do not include Substitutions in
  :doc:`Headings </style-guide/markup/format/headings>`. The text that
  replaces the Substitution may be longer than the underline and
  result in a build error.


Comparison of Variable Syntaxes
---------------------------------------

.. list-table::
   :header-rows: 1
   :stub-columns: 1

   * -
     - ``{+version+}``
     - ``{{version}}``
     - ``|version|``

   * - Description
     - ``source_constants``
     - Giza YAML substitutions
     - `restructuredText substitutions <http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#substitution-definitions>`__

   * - Locations
     - Can be used anywhere
     - Can only be used within YAML files
     - May only be used in a subset of restructuredText syntactical locations

   * - Valid Content
     - Anything
     - Anything
     - May not be used to inject links or other non-trivial types of
       content

   * - Mutable
     - Can currently only be defined in ``conf.py``
     - Yes. Can be overridden with Giza's content inheritance mechanism
     - Can only be defined once per page context

   * - Warns if undefined
     - Yes
     - No
     - Yes
